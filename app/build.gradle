plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.kks.nimbletest"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding(true)
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    // https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/index.html
    packagingOptions {
        // for JNA and JNA-platform
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        // for byte-buddy
        exclude "META-INF/licenses/ASM"
        pickFirst "win32-x86-64/attach_hotspot_windows.dll"
        pickFirst "win32-x86/attach_hotspot_windows.dll"
    }

    configurations {
        androidTestImplementation {
            // https://github.com/mockk/mockk/issues/722
            exclude group: 'io.mockk', module: 'mockk-agent-jvm'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            buildConfigField("String", "BASE_URL", "\"https://survey-api.nimblehq.co/\"")
        }
        prod {
            buildConfigField("String", "BASE_URL", "\"https://survey-api.nimblehq.co/\"")
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    ndkVersion '21.3.6528147'

}

dependencies {

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "androidx.core:core-splashscreen:$splash_screen_version"

    // Lifecycle components
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-extensions:$lifecycle_extension_version")

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Timber
    implementation("com.jakewharton.timber:timber:$timber_version")

    // Klaxon serialize
    implementation "com.beust:klaxon:$klaxon_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // Retrofit mock
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"

    // Okhttp
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"

    // Facebook shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmer_version"

    // Dot indicator
    implementation 'com.github.adrielcafe:PageIndicatorView:1.0.6'

    // Loading spin
    implementation "com.github.ybq:Android-SpinKit:$spinkit_version"

    // Swipe refresh
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_version")

    // Connection Check
    implementation "com.github.kaungkhantsoe:KConnectionCheckKotlin:$kconnection_version"

    //
    // --------------------------- Unit Test ---------------------------
    //

    testImplementation 'junit:junit:4.+'

    // Google Truth
    testImplementation "com.google.truth:truth:$google_truth_version"

    //For runBlockingTest, CoroutineDispatcher etc.
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    //For InstantTaskExecutorRule
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"

    // Mockito Kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    //How to mock a final class with mockito
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"

    // Json for unit test
    testImplementation "org.json:json:$json_version"

    // Mockk
    testImplementation "io.mockk:mockk-android:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"

    //
    // --------------------------- Android Test ---------------------------
    //

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}